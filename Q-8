class Solution {

    public int[][] merge(int[][] intervals) {
      if(intervals.length==1){
        return intervals;
      }
        Arrays.sort(intervals, Comparator.comparingInt((int[] row) -> row[0]).thenComparingInt(row -> row[1]));
        ArrayList<int []> al=new ArrayList<>();
        int first=intervals[0][0];
        int second=intervals[0][1];
        for(int i=1;i<intervals.length;i++){
          int f=intervals[i][0];
          int s=intervals[i][1];
          if(f<=second){
            second=Math.max(second,s);
            if(i==intervals.length-1){
              int dummy[]=new int[2];
              dummy[0]=first;
              dummy[1]=second;
              al.add(dummy);
            }
            
          }
          else{
            int temp[]=new int[2];
            temp[0]=first;
            temp[1]=second;
            al.add(temp);
            first=intervals[i][0];
            second=intervals[i][1];
            if(i==intervals.length-1){
              int dummy[]=new int[2];
              dummy[0]=first;
              dummy[1]=second;
              al.add(dummy);
            }
          }
        }
        int ans[][]=new int[al.size()][2];
        for(int i=0;i<al.size();i++){
          ans[i][0]=al.get(i)[0];
          ans[i][1]=al.get(i)[1];
        }
        return ans;
        
        
    }
}
